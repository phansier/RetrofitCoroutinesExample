apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

android {
    compileSdkVersion 32
    defaultConfig {
        applicationId "ru.beryukhov.retrofitcoroutinesexample"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        buildConfigField("String", "YANDEX_API_KEY", "\"${getSecureApiKey()}\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.2"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    implementation "com.google.android.material:material:1.6.1"

}

String getSecureApiKey() {
    final String KEY = "yandex_api_key"
    final String PROPERTIES_FILE = "local.properties"

    def missingKey = {
        def message = """

            ATTENTION!
            Need to create file [$PROPERTIES_FILE], with key:
            $KEY=...
            You may get API key from https://tech.yandex.ru/rasp/raspapi/
        
        """
        println(message)
        throw new Exception(message)
    }

    def secureFile = project.rootProject.file(PROPERTIES_FILE)
    if (!secureFile.exists()) {
        missingKey()
    }
    Properties secureProperties = new Properties()
    secureProperties.load(secureFile.newDataInputStream())
    if (secureProperties.getProperty(KEY) == null) {
        println(secureProperties.getProperty(KEY))
        missingKey()
    }
    return secureProperties[KEY]
}